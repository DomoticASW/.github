@startuml users-management-domain-model

hide empty members
package Repository{
    interface Repository<Id, Entity>
}

package "Users management" as Users {
    interface User <<Aggregate Root>> {
        nickname: Nickname
        email: Email
        passwordHash: PasswordHash
        role: Role
    }
    interface Admin extends User

    interface RegistrationRequest <<Aggregate Root>> {
        nickname: Nickname
        email: Email
        passwordHash: PasswordHash
        ~{static} new(Nickname, Email, Password): RegistrationRequest
    }

    interface Token {
        userEmail: Email
        source: String
        ~{static} new(String): Token | InvalidTokenFormatError
    }
    enum Role {
        Admin
        User
    }
    Token -- Role : "role >"

    interface UsersService <<Service>> {
        getAllRegistrationRequests(Token): Iterable<RegistrationRequest>, InvalidTokenError
        publishRegistrationRequest(Nickname, Email, Password): EmailAlreadyInUseError?
        approveRegistrationRequest(Token, Email): (EmailAlreadyInUseError | RegistrationRequestNotFoundError | TokenError)?
        rejectRegistrationRequest(Token, Email): (RegistrationRequestNotFoundError | TokenError)?
        removeUser(Token, Email): (UserNotFoundError | TokenError)?
        updateUserData(Token, Nickname?, Password?): (UserNotFoundError | TokenError)?
        getAllUsers(Token): Iterable<User> | InvalidTokenError
        getUserData(Token): User | InvalidTokenError | UserNotFoundError
        login(Email, Password): Token | InvalidCredentialsError
        verifyToken(Token): InvalidTokenError?
        makeToken(String): Token | InvalidTokenFormatError
    }

    ~interface RegistrationRequestRepository<Email, RegistrationRequest> <<Repository>> {
    }
    RegistrationRequestRepository -l-|> Repository.Repository
    RegistrationRequestRepository o-- RegistrationRequest
    ~interface UsersRepository<Email, User> <<Repository>> {
    }
    UsersRepository -l-|> Repository.Repository
    UsersRepository o-- User
    
    UsersService --> UsersRepository
    UsersService --> RegistrationRequestRepository

    interface TokenError
    struct UnauthorizedError extends TokenError
    struct InvalidTokenError extends TokenError
    Token -r[hidden]- TokenError

    UsersService -[hidden]-> Token
}

@enduml
