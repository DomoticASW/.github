@startuml scripts-domain-model

hide empty members
package Repository{
    interface Repository<Id, Entity>
}

package "Users management" as UsersManagement {
    interface UsersService <<Service>>
}

package "Devices management" as DevicesManagement {
    interface DevicesService <<Service>>
}

package Permissions {
    interface PermissionsService <<Service>>
}

package "Scripts" {

    interface ScriptId

    interface Script<Id extends ScriptId> <<Aggregate>> {
        id: Id
        name: String
        ~execute()
    }

    interface Task
    interface Automation {
        enabled: Boolean
    }

    interface Trigger

    struct DeviceEventTrigger extends Trigger {
        deviceId: DeviceId
        eventName: String
    }

    struct PeriodTrigger extends Trigger {
        start: DateTime
        periodSeconds: Long
    }

    interface Instruction {
    }

    class DeviceActionInstruction extends Instruction {
        deviceId: DeviceId
        actionId: DeviceActionId
        input: Any
    }

    class IfInstruction extends Instruction {
        ' TODO: condition
    }

    class IfElseInstruction extends IfInstruction {
        ' TODO: condition
    }

    ~interface ScriptRepository<ScriptId, Script> <<Repository>> {
    }
    ScriptRepository -l-|> Repository.Repository
    ScriptRepository o-- Script

    interface ScriptsService <<Service>> {
        getAllTasks(Token): Iterable<Task> | InvalidTokenError
        executeTask(Token, TaskId): (InvalidTokenError | ScriptNotFound | PermissionError)?
        ..
        getAllAutomations(Token): Iterable<Automation> | InvalidTokenError
        setAutomationEnable(Token, AutomationId, enable: Boolean): (InvalidTokenError | ScriptNotFound)?
    }

    Script -l[hidden] ScriptId
    Script <|-- Task : "<TaskId>"
    Script <|-- Automation : "<AutomationId>"
    Automation "1" -- "1" Trigger
    Script "1" -r- "0..*" Instruction : "{ordered}"
    IfInstruction "0..1" o-- "0..*" Instruction : "then >"
    IfElseInstruction "0..1" o-- "0..*" Instruction : "else >"
    ScriptsService --> ScriptRepository
    ScriptsService -u-> Permissions.PermissionsService
    ScriptsService -u-> DevicesManagement.DevicesService
    ScriptsService -u-> UsersManagement.UsersService
}

@enduml
